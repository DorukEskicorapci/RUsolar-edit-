#include "can.h"
#include "main.h"
#include "can_params.h"
#include "stm32f7xx_hal_can.h"

can_param_t* find(uint16_t id);

void sw3_can_interrupt_handler(CAN_HandleTypeDef* hcan) {

}

void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef* hcan) {
	sw3_can_interrupt_handler(hcan);
}

void sw3_can_error_handler(CAN_HandleTypeDef* hcan) {
	HAL_CAN_GetError(hcan);
}

void sw3_can_init(CAN_HandleTypeDef* hcan) {

	sw3_can_errors.present = 0;

	HAL_CAN_Start(hcan);
	HAL_CAN_ActivateNotification(hcan, CAN_IT_RX_FIFO0_MSG_PENDING);

	CAN_FilterTypeDef canfilterconfig;

	canfilterconfig.FilterActivation = CAN_FILTER_ENABLE;
	canfilterconfig.FilterBank = 18;  // which filter bank to use from the assigned ones
	canfilterconfig.FilterFIFOAssignment = CAN_FILTER_FIFO0;
	canfilterconfig.FilterIdHigh = 0x000<<5; // 0x001
	canfilterconfig.FilterIdLow = 0;
	canfilterconfig.FilterMaskIdHigh = 0x000<<5; // 0x001
	canfilterconfig.FilterMaskIdLow = 0x0000;
	canfilterconfig.FilterMode = CAN_FILTERMODE_IDMASK;
	canfilterconfig.FilterScale = CAN_FILTERSCALE_32BIT;
	canfilterconfig.SlaveStartFilterBank = 20;  // how many filters to assign to the CAN1 (master can)

	HAL_CAN_ConfigFilter(hcan, &canfilterconfig);
}
